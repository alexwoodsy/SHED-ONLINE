[{"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\index.js":"1","C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\reportWebVitals.js":"2","C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\pages\\index.js":"3","C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\index.js":"4","C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\Game.js":"5","C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\Table.js":"6","C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\player.js":"7","C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\card.js":"8","C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\CardImages.js":"9","C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\pages\\homescreen.js":"10","C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\pages\\lobby.js":"11"},{"size":982,"mtime":1612381879918,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":108,"mtime":1612115915070,"results":"15","hashOfConfig":"13"},{"size":112,"mtime":1612465417489,"results":"16","hashOfConfig":"13"},{"size":18244,"mtime":1612465404664,"results":"17","hashOfConfig":"13"},{"size":15183,"mtime":1612299093746,"results":"18","hashOfConfig":"13"},{"size":760,"mtime":1612031315019,"results":"19","hashOfConfig":"13"},{"size":2020,"mtime":1612383113520,"results":"20","hashOfConfig":"13"},{"size":3282,"mtime":1612032090662,"results":"21","hashOfConfig":"13"},{"size":1072,"mtime":1612122799497,"results":"22","hashOfConfig":"13"},{"size":4714,"mtime":1612298540051,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"19mmtle",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\index.js",[],["49","50"],"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\reportWebVitals.js",[],"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\pages\\index.js",[],"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\index.js",[],"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\Game.js",[],"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\Table.js",[],"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\player.js",[],"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\card.js",[],"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\game\\CardImages.js",[],["51","52"],"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\pages\\homescreen.js",[],"C:\\Users\\alexw\\Documents\\programming projects\\SHED-online\\src\\pages\\lobby.js",["53"],"import React from 'react';\r\nimport { Client } from 'boardgame.io/react';\r\nimport { LobbyClient } from 'boardgame.io/client';\r\nimport { SocketIO } from 'boardgame.io/multiplayer'\r\nimport { SHED, SHEDtable } from '../game';\r\n\r\n\r\n// const { origin, protocol, hostname } = window.location;\r\n// const port = 8000;\r\n// const SERVER = `${protocol}//${hostname}:${port}`;\r\nconst SERVER = 'localhost:8000'\r\n\r\n\r\nexport const SHEDClient = Client({\r\n    game: SHED,\r\n    board: SHEDtable,\r\n    debug: true,\r\n    multiplayer: SocketIO({server: SERVER}),\r\n    loading: loading,\r\n  });\r\n\r\nfunction loading () { \r\n  const element = (<h1> put loading screen here</h1>)\r\n  return element;\r\n  \r\n}\r\n\r\nexport class Lobby extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            canJoin: false,\r\n            playerID: null, \r\n            matchID: '', \r\n            playerName: '',\r\n            playerCredentials: null,\r\n\r\n        };\r\n        this.lobbyClient = null;\r\n    }\r\n\r\n\r\n    handleChangeJoinMatch = (event) => {\r\n        this.setState({matchID: event.target.value})\r\n    };\r\n\r\n    handleChangePlayerName = (event) => {\r\n        this.setState({playerName: event.target.value})\r\n    };\r\n\r\n    async handleJoin (event) {\r\n        event.preventDefault()\r\n        console.log(this.getMatchJoining())\r\n        const { playerCredentials } = await this.lobbyClient.joinMatch(\r\n            'SHED',\r\n            this.state.matchID,\r\n            {\r\n              playerID: this.state.playerID,\r\n              playerName: this.state.playerName,\r\n            }\r\n          );\r\n        this.setState({playerCredentials: playerCredentials})\r\n    };\r\n\r\n    //need to use game/matchID to create lobby in\r\n    async handleCreateMatch (numPlayers) {\r\n        \r\n        console.log(SERVER)\r\n        this.lobbyClient  = new LobbyClient(SERVER);\r\n\r\n        //create the game and assign match ID to state:\r\n        const { matchID } = await this.lobbyClient.createMatch('SHED', {\r\n            numPlayers: numPlayers\r\n          });\r\n\r\n        this.setState({matchID: matchID}) //autofills\r\n        \r\n    }\r\n\r\n    //gets info on game currently joining so we can assign this client an ID\r\n    async getMatchJoining() {\r\n        const match = await this.lobbyClient.getMatch('SHED', this.state.matchID);\r\n        const playersInMatch = match.players;\r\n\r\n    }\r\n    \r\n    \r\n    createMatch = () => {\r\n        //change to be a selection thing 0-4 for the number of players\r\n        let numPlayers = 2;\r\n        if (this.state.playerID === null) {\r\n            return (\r\n                <div>\r\n                    <h2>Create Match</h2>\r\n                    <button onClick={() => this.handleCreateMatch(numPlayers)}>\r\n                        <h2>Create match</h2>\r\n                </button>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    joinMatch = () => {\r\n        if (this.state.canJoin === false) {\r\n            return(\r\n                <form onSubmit={this.handleJoin}>\r\n                    <h2>Join Match</h2>\r\n                    <div>\r\n                    <label>\r\n                        Player Name:\r\n                        <input type=\"text\" value={this.state.playerName} onChange={this.handleChangePlayerName} />\r\n                    </label>\r\n                    </div>\r\n                    <div>\r\n                    <label>\r\n                        match ID:\r\n                        <input type=\"text\" value={this.state.matchID} onChange={this.handleChangeJoinMatch} />\r\n                        <input type=\"submit\" value=\"Join\" />\r\n                    </label>\r\n                    </div>\r\n                </form>\r\n            );\r\n        }\r\n        return (\r\n            <SHEDClient playerID={this.state.playerID} matchID={this.state.matchID} />\r\n        )\r\n    }\r\n\r\n    render () {\r\n        return(\r\n            <div>\r\n                {/* <this.renderPlayerChoice /> */}\r\n                <this.createMatch />\r\n                <this.joinMatch />\r\n            </div>  \r\n        ); \r\n    }\r\n}\r\n\r\n\r\n\r\n//legacy\r\n// renderPlayerChoice = () => {\r\n       \r\n//     if (this.state.playerID === null) {\r\n//         return (\r\n//             <div>\r\n//             <h1>Lobby</h1>    \r\n//             <p>Play as</p>\r\n//             <button onClick={() => this.setState({ playerID: \"0\"})}>\r\n//                 Player 0\r\n//             </button>\r\n//             <button onClick={() => this.setState({ playerID: \"1\"})}>\r\n//                 Player 1\r\n//             </button>\r\n//             </div>\r\n//         );\r\n//     }\r\n//     return (\r\n//         <div>\r\n//             <SHEDClient playerID={this.state.playerID} />\r\n//         </div>\r\n//     );\r\n// }",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":83,"column":15,"nodeType":"62","messageId":"63","endLine":83,"endColumn":29},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],["64"],["65"],"no-unused-vars","'playersInMatch' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]